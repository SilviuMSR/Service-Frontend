{"version":3,"sources":["components/login/Login.js","components/common/subComponents/ExpansionPanel.js","components/home/Home.js","components/common/FormDialog.js","components/common/subComponents/TooltipMenu.js","utils/constants.js","components/common/Sidebar.js","components/common/Topbar.js","components/Root.js","utils/MuiTheme.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","_this2","setState","setTimeout","isLogged","_this3","react_default","a","createElement","className","icons_index_es","fontSize","color","index_es","label","type","style","control","value","variant","onClick","login","size","Component","ExpansionPanel","expandIcon","panelHeading","panelText","Home","panels","map","panel","subComponents_ExpansionPanel","renderPanels","FormDialog","handleClose","open","onClose","propsToState","fields","forEach","field","name","assign","selectedItems","console","log","event","defineProperty","target","items","onSave","index","key","autoFocus","fullWidth","margin","onChange","aria-labelledby","maxWidth","id","dialogTitle","dialogText","renderFields","multiSelect","react_multi_select_default","multiSelectItems","handleChangeSelectItem","saveChanges","submitButtonText","TooltipMenu","handleClick","anchorEl","currentTarget","clicked","onSelect","options","onClickAway","aria-label","aria-owns","aria-haspopup","MoreVert_default","marginLeft","option","React","CREATE","addEditGroupModalFields","addEditCategoryModalFields","toolTipOptionsGroup","toolTipOptionsElement","multipleSelectItems","disabled","sidebarTree","edit","text","childrens","Sidebar","sidebarState","expandedAll","renderSidebar","openGroupDialog","groupDialogTitle","groupDialogType","CONSTANTS","groupButtonText","openCategoryDialog","categoryDialogTitle","categoryDialogType","categoryButtonText","recursiveStateBuild","tree","element","selected","expanded","values","enableMultiSelect","action","sidebarStateCopy","keys","nested","arguments","length","undefined","depth","disableGutters","divider","button","inset","primary","subComponents_TooltipMenu","actionId","toolTipCategoryClickHandler","toolTipGroupClickHandler","in","timeout","unmountOnExit","component","disablePadding","dense","_this4","common_FormDialog","saveGroup","saveCategory","subheader","toggleExpandAll","addGroup","Topbar","position","sidebarOpen","toggleSidebar","paddingLeft","noWrap","placeholder","Root","showSidebar","then","catch","Promise","resolve","reject","display","common_Topbar","common_Sidebar","home_Home","login_Login","changeIsLogged","MuiTheme","createMuiTheme","typography","useNextVariants","overrides","MuiInput","underline","&:after","borderBottom","MuiFormLabel","root","&$focused","MuiButton","containedPrimary","backgroundColor","&:hover","flatPrimary","MuiCheckbox","colorPrimary","&$checked","MuiAppBar","MuiIconButton","colorSecondary","MuiSvgIcon","MuiListItem","paddingRight","App","styles","theme","components_Root","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e38a8d5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { TextField, Button, Checkbox, FormControlLabel, CircularProgress, IconButton } from '@material-ui/core'\nimport { Lock } from '@material-ui/icons'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false\n        }\n    }\n\n    login() {\n        this.setState({\n            isLoading: true\n        })\n        setTimeout(() => {\n            this.setState({\n                isLoading: false\n            })\n            this.props.isLogged(true)\n        }, 2000)\n    }\n\n    render() {\n        return (\n            <div className='loginContainer'>\n                <div className='login'>\n                    <Lock fontSize='large' color='primary' />\n                    <TextField\n                        className='loginInput'\n                        label='Username'\n                    />\n                    <TextField\n                        className='loginInput'\n                        label='Password'\n                        type='password'\n                    />\n                    <div className='loginRememberMe'>\n                        <FormControlLabel\n                            className='loginRememberMeLabel'\n                            style={{ color: '#dedede' }}\n                            control={\n                                <Checkbox\n                                    value='checkedF'\n                                    color='primary'\n                                />\n                            }\n                            label='Remember me'\n                        />\n                    </div>\n                    <Button className='loginButton' variant=\"contained\" onClick={() => this.login()} color=\"primary\">\n                        {this.state.isLoading ? <CircularProgress style={{ color: '#ffffff' }} size={24} /> : 'Login'}\n                    </Button>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","import React from 'react'\nimport { ExpansionPanelSummary, ExpansionPanelDetails, Typography, ExpansionPanel as Panel } from '@material-ui/core'\nimport { ExpandMore as ExpandMoreIcon } from '@material-ui/icons'\n\nfunction ExpansionPanel(props) {\n    return (\n        <Panel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography>{props.panelHeading}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <Typography>\n                    {props.panelText}\n                </Typography>\n            </ExpansionPanelDetails>\n        </Panel>\n    )\n}\n\nexport default ExpansionPanel","import React, { Component } from 'react'\nimport ExpansionPanel from '../common/subComponents/ExpansionPanel'\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false,\n            panels: [\n                { panelHeading: 'test1', panelText: 'Lorem ipsum dolor sit amet' },\n                { panelHeading: 'test2', panelText: 'Lorem ipsum dolor sit amet' },\n                { panelHeading: 'test3', panelText: 'Lorem ipsum dolor sit amet' },\n                { panelHeading: 'test4', panelText: 'Lorem ipsum dolor sit amet' },\n                { panelHeading: 'test5', panelText: 'Lorem ipsum dolor sit amet' },\n                { panelHeading: 'test6', panelText: 'Lorem ipsum dolor sit amet' },\n                { panelHeading: 'test7', panelText: 'Lorem ipsum dolor sit amet' },\n                { panelHeading: 'test8', panelText: 'Lorem ipsum dolor sit amet' },\n            ]\n        }\n    }\n    renderPanels(){\n        return this.state.panels.map(panel => <ExpansionPanel panelHeading={panel.panelHeading} panelText={panel.panelText} />)\n    }\n    render() {\n        return (\n            <div className='homeContainer'>\n                {this.renderPanels()}\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport MultiSelect from \"@kenshooui/react-multi-select\"\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\n\nclass FormDialog extends Component {\n\n    constructor(props) {\n        super(props)\n        let propsToState = {}\n        this.props.fields.forEach(field => propsToState[field.name] = field.value)\n        this.state = Object.assign({}, propsToState, { selectedItems: [] })\n        console.log(this.props)\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n        this.props.onClose()\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleChangeSelectItem(items){\n        this.setState({selectedItems: items})\n    }\n\n    saveChanges() {\n        this.props.onSave({ type: this.props.type, fields: this.state })\n    }\n\n    renderFields() {\n        return this.props.fields.map((field, index) => <TextField\n            key={index}\n            autoFocus\n            fullWidth={true}\n            margin=\"dense\"\n            value={this.state[field.name]}\n            name={field.name}\n            label={field.label}\n            type={field.type}\n            onChange={event => this.onChange(event)}\n        />)\n    }\n\n    render() {\n        return (\n            <div>\n                <Dialog\n                    open={this.props.open}\n                    aria-labelledby=\"form-dialog-title\"\n                    className={this.props.className}\n                    fullWidth={true}\n                    maxWidth={this.props.maxWidth}\n                >\n                    <DialogTitle id=\"form-dialog-title\">{this.props.dialogTitle}</DialogTitle>\n                    <DialogContent>\n                        {this.props.dialogText ? <DialogContentText>\n                            {this.props.dialogText}\n                        </DialogContentText> : null}\n                        {this.renderFields()}\n                        {this.props.multiSelect && <div className='modalBoxMultipleSelect'><MultiSelect\n                            items={this.props.multiSelectItems}\n                            selectedItems={this.state.selectedItems}\n                            onChange={items => this.handleChangeSelectItem(items)}\n                        /></div>}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={() => this.saveChanges()} color=\"primary\">\n                            {this.props.submitButtonText}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default FormDialog","import React from 'react'\nimport { IconButton, MenuItem, Menu, ClickAwayListener } from '@material-ui/core'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\n\nclass TooltipMenu extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            options: this.props.options,\n            anchorEl: null,\n            open: false\n        }\n    }\n\n    handleClick = event => {\n        this.setState({ anchorEl: event.currentTarget, open: true })\n    }\n\n    handleClose = clicked => {\n        this.setState({ anchorEl: null, open: false })\n        this.props.onSelect(clicked)\n    }\n\n    render() {\n        const { anchorEl } = this.state\n\n        return (\n            <ClickAwayListener onClickAway={() => this.setState({ open: false })}>\n                <div>\n                    <IconButton\n                        aria-label=\"More\"\n                        aria-owns={this.state.open ? 'long-menu' : null}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleClick}\n                    >\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"long-menu\"\n                        anchorEl={anchorEl}\n                        open={this.state.open}\n                        style={{ marginLeft: '50px' }}\n                    >\n                        {this.state.options.map((option, index) => (\n                            <MenuItem key={index} onClick={() => this.handleClose(option.key)}>\n                                {option.value}\n                            </MenuItem>\n                        ))}\n                    </Menu>\n                </div>\n            </ClickAwayListener >\n        )\n    }\n}\n\nexport default TooltipMenu","export const EDIT = 'edit'\nexport const CREATE = 'create'","import React, { Component } from 'react'\nimport { List, ListItem, Collapse, ListItemText, ListItemIcon, Divider, ListSubheader, IconButton } from '@material-ui/core'\nimport { ExpandLess, ExpandMore, Send as SendIcon, AddCircle } from '@material-ui/icons'\nimport FormDialog from '../common/FormDialog'\nimport TooltipMenu from '../common/subComponents/TooltipMenu'\nimport * as CONSTANTS from '../../utils/constants'\n\nconst addEditGroupModalFields = [\n    { name: 'test', label: 'Group name', type: 'text', value: '' }\n]\n\nconst addEditCategoryModalFields = [\n    { name: 'test', label: 'Category name', type: 'text', value: '' }\n]\n\nconst toolTipOptionsGroup = [\n    { value: 'Editare grupa', key: 'edit' },\n    { value: 'Adaugare categorie', key: 'add' }\n]\n\nconst toolTipOptionsElement = [\n    { value: 'Editare categorie', key: 'edit' },\n    { value: 'Adaugare element', key: 'add' }\n]\n\nconst multipleSelectItems = [\n    { id: 0, label: \"item 1\" },\n    { id: 2, label: \"item 2\", disabled: true },\n    { id: 3, label: \"item 3\", disabled: false },\n    { id: 4, label: \"item 4\" }\n]\n\nlet sidebarTree = [\n    {\n        edit: true, text: 'test3', key: '1', childrens: [\n            {\n                edit: true, text: 'test2', key: '11', childrens: [\n                    { edit: true, text: 'test1', key: '111' },\n                    { edit: true, text: 'test2', key: '112' }\n                ]\n            }\n        ]\n    },\n    {\n        edit: true, text: 'test3', key: '2', childrens: [\n            {\n                edit: true, text: 'test2', key: '21', childrens: [\n                    { edit: true, text: 'test1', key: '211' },\n                    { edit: true, text: 'test2', key: '212' }\n                ]\n            }\n        ]\n    }\n]\n\nconst EXPAND = 'expand'\nconst SELECT = 'select'\n\nclass Sidebar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false,\n            sidebarState: {},\n            expandedAll: false,\n            renderSidebar: false,\n            openGroupDialog: false,\n            groupDialogTitle: 'Create new Group',\n            groupDialogType: CONSTANTS.CREATE,\n            groupButtonText: 'send',\n            openCategoryDialog: false,\n            categoryDialogTitle: 'Create new Group',\n            categoryDialogType: CONSTANTS.CREATE,\n            categoryButtonText: 'send'\n        }\n    }\n\n    componentWillMount() {\n        let sidebarState = {}\n        let recursiveStateBuild = tree => {\n            tree.forEach(element => {\n                sidebarState[element.key] = { selected: false, expanded: false }\n                if (element.childrens) {\n                    recursiveStateBuild(element.childrens)\n                }\n            })\n        }\n        recursiveStateBuild(sidebarTree)\n        this.setState({ sidebarState: sidebarState, renderSidebar: true })\n    }\n\n    /* group */\n    saveGroup(values) {\n        console.log(values)\n    }\n\n    addGroup() {\n        //Add group\n        this.setState({\n            groupDialogType: CONSTANTS.CREATE,\n            openGroupDialog: true,\n            groupDialogTitle: 'Create group',\n            groupButtonText: 'create',\n            enableMultiSelect: false\n        })\n    }\n\n    toolTipGroupClickHandler(action, id) {\n        console.log(action, id)\n        if (action === CONSTANTS.EDIT) { //edit group\n            this.setState({\n                groupDialogType: CONSTANTS.EDIT,\n                openGroupDialog: true,\n                groupDialogTitle: 'Edit group #' + id,\n                groupButtonText: 'edit'\n            })\n        } else { //add category\n            this.setState({\n                categoryDialogType: CONSTANTS.EDIT,\n                openCategoryDialog: true,\n                categoryDialogTitle: 'Add category #' + id,\n                categoryButtonText: 'create'\n            })\n        }\n    }\n\n    /* category */\n    saveCategory(values) {\n        console.log(values)\n    }\n\n    toolTipCategoryClickHandler(action, id) {\n        if (action === CONSTANTS.EDIT) {\n            this.setState({\n                categoryDialogType: CONSTANTS.EDIT,\n                openCategoryDialog: true,\n                categoryDialogTitle: 'Edit category #' + id,\n                categoryButtonText: 'create'\n            })\n        }\n    }\n\n    handleClick(key, action /*expand or select */) {\n        let sidebarStateCopy = Object.assign({}, this.state.sidebarState)\n        if (action === SELECT) // reset all selected to false\n            Object.keys(sidebarStateCopy).forEach(element => {\n                if (sidebarStateCopy[element].selected)\n                    sidebarStateCopy[element] = { selected: false, expanded: sidebarStateCopy[element].expanded }\n            })\n        sidebarStateCopy[key][action === EXPAND ? 'expanded' : 'selected'] = !sidebarStateCopy[key][action === EXPAND ? 'expanded' : 'selected']\n        this.setState({ sidebarState: sidebarStateCopy })\n    }\n\n    toggleExpandAll() {\n        let sidebarStateCopy = Object.assign({}, this.state.sidebarState)\n        Object.keys(sidebarStateCopy).forEach(element => {\n            sidebarStateCopy[element] = { selected: sidebarStateCopy[element].selected, expanded: !this.state.expandedAll }\n        })\n        this.setState({ sidebarState: sidebarStateCopy, expandedAll: !this.state.expandedAll })\n    }\n\n    sidebarTree(tree, nested = false, depth = 0) {\n        return tree.map((element, index) => {\n            if (element.childrens) {\n                return (<div>\n                    <ListItem disableGutters={true} divider={true} key={element.key} id={element.key} button >\n                        <ListItemIcon onClick={() => this.handleClick(element.key, EXPAND)}>\n                            {this.state.sidebarState[element.key].expanded ?\n                                <ExpandLess /> :\n                                <ExpandMore />\n                            }\n                        </ListItemIcon>\n                        <ListItemText onClick={() => this.handleClick(element.key, EXPAND)} inset primary={element.text} />\n                        {element.edit ? <TooltipMenu\n                            actionId={element.key}\n                            onSelect={action => nested ? this.toolTipCategoryClickHandler(action, element.key) : this.toolTipGroupClickHandler(action, element.key)}\n                            options={nested ? toolTipOptionsElement : toolTipOptionsGroup} />\n                            : null}\n                    </ListItem>\n                    <Collapse in={this.state.sidebarState[element.key].expanded} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            {this.sidebarTree(element.childrens, true, ++depth)}\n                        </List>\n                    </Collapse>\n                </div>)\n            } else {\n                return <ListItem disableGutters={true} dense={true} divider={true} key={element.key} onClick={() => this.handleClick(element.key, SELECT)}\n                    button\n                    selected={this.state.sidebarState[element.key].selected ? true : false}>\n                    <ListItemIcon>\n                        <SendIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary={element.text} />\n                </ListItem>\n            }\n        })\n    }\n\n    render() {\n        return this.state.renderSidebar ? (\n            <div className='sidebar'>\n                <FormDialog\n                    fields={addEditGroupModalFields}\n                    open={this.state.openGroupDialog}\n                    submitButtonText={this.state.groupButtonText}\n                    type={this.state.groupDialogType}\n                    onSave={values => this.saveGroup(values)}\n                    onClose={() => this.setState({ openGroupDialog: false })}\n                    dialogTitle={this.state.groupDialogTitle}\n                    maxWidth={'xs'}\n                />\n                <FormDialog\n                    fields={addEditCategoryModalFields}\n                    open={this.state.openCategoryDialog}\n                    submitButtonText={this.state.categoryButtonText}\n                    type={this.state.categoryDialogType}\n                    onSave={values => this.saveCategory(values)}\n                    onClose={() => this.setState({ openCategoryDialog: false })}\n                    multiSelect={true}\n                    multiSelectItems={multipleSelectItems}\n                    dialogTitle={this.state.categoryDialogTitle}\n                    maxWidth={'md'}\n                />\n                <List component=\"nav\"\n                    subheader={<ListSubheader component=\"div\" className='sidebarSubheader'>\n                        {this.state.expandedAll ?\n                            <IconButton color=\"secondary\" onClick={() => this.toggleExpandAll()} ><ExpandMore /> </IconButton> :\n                            <IconButton color=\"secondary\" onClick={() => this.toggleExpandAll()}><ExpandLess /> </IconButton>\n                        }\n                        <IconButton color=\"secondary\">\n                            <AddCircle onClick={() => this.addGroup()} />\n                        </IconButton>\n                    </ListSubheader>}\n                >\n                    <Divider />\n                    {this.sidebarTree(sidebarTree)}\n                </List>\n            </div>\n        ) : null\n    }\n}\n\nexport default Sidebar","import React, { Component } from 'react'\nimport { AppBar, Toolbar, IconButton, Typography, InputBase } from '@material-ui/core'\nimport { Menu as MenuIcon, Search as SearchIcon } from '@material-ui/icons'\n\nclass Topbar extends Component {\n\n    render() {\n        return (\n            <div className='homeContainer'>\n                <AppBar position=\"fixed\">\n                    <Toolbar>\n                        <IconButton  className={this.props.sidebarOpen ? 'sidebarClosed' : null}  color=\"inherit\" aria-label=\"Open drawer\" onClick={() => this.props.toggleSidebar()}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" style={{paddingLeft: '20px'}} color=\"inherit\" noWrap>\n                            Firma\n                        </Typography>\n\n                        <div className='searchHolder'>\n                            <div>\n                                <SearchIcon className='searchIcon' />\n                            </div>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                type=\"search\"\n                            />\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        )\n    }\n}\n\nexport default Topbar\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from './login/Login'\nimport Home from './home/Home'\nimport Sidebar from './common/Sidebar'\nimport Topbar from './common/Topbar'\n\nclass Root extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLogged: true,\n            showSidebar: true\n        }\n    }\n\n    componentDidMount() {\n        this.isLogged()\n            .then(() => this.setState({ isLogged: true }))\n            .catch(() => this.setState({ isLogged: false }))\n    }\n\n    isLogged() {\n        return new Promise((resolve, reject) => {\n            resolve(true)\n        })\n    }\n\n    changeIsLogged(isLogged){\n        this.setState({isLogged: isLogged})\n    }\n\n    toggleSidebar() {\n        this.setState({showSidebar: !this.state.showSidebar})\n    }\n\n    render() {\n        return this.state.isLogged ? (\n            <div className='fullHeight' style={{ display: 'flex' }}>\n                <Topbar sidebarOpen={this.state.showSidebar} toggleSidebar={() => this.toggleSidebar()}/>\n                {this.state.showSidebar ? <Sidebar /> : null}\n                <div className='contentContainer'>\n                    <Home />\n                </div>\n            </div>\n        ) : <Login  isLogged={isLogged => this.changeIsLogged(isLogged)}/>\n    }\n}\n\nexport default Root","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst primaryGreenColor = '#4abdac'\nconst primaryGreenColorHover = '#3ea596'\nconst secondaryRedColor = '#fc4a1a'\n\nconst MuiTheme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    overrides: {\n        MuiInput: {\n            underline: {\n                '&:after': {\n                    borderBottom: '2px solid ' + primaryGreenColor\n                }\n            }\n        },\n        MuiFormLabel: {\n            root: {\n                \"&$focused\": {\n                    color: primaryGreenColor\n                }\n            }\n        },\n        MuiButton: {\n            containedPrimary: {\n                backgroundColor: primaryGreenColor,\n                '&:hover': {\n                    backgroundColor: primaryGreenColorHover\n                }\n            },\n            flatPrimary: {\n                color: primaryGreenColorHover\n            }\n        },\n        MuiCheckbox: {\n            colorPrimary: {\n                '&$checked': {\n                    color: primaryGreenColor,\n                }\n            }\n        },\n        MuiAppBar: {\n            colorPrimary: {\n                backgroundColor: primaryGreenColorHover\n            }\n        },\n        MuiIconButton: {\n            colorSecondary: {\n                color: secondaryRedColor\n            }\n        },\n        MuiSvgIcon: {\n            colorPrimary: {\n                color: primaryGreenColor\n            }\n        },\n        MuiListItem: {\n            root: {\n                paddingRight: '5px',\n                paddingLeft: '18px'\n            }\n        }\n    }\n})\nexport default MuiTheme","import React, { Component } from 'react'\nimport Root from './components/Root'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport MuiTheme from './utils/MuiTheme'\nimport './styles/index.css'\nimport './styles/App.css'\nimport './styles/Login.css'\nimport './styles/Sidebar.css'\nimport './styles/Home.css'\n\nclass App extends Component {\n  render() {\n    return <MuiThemeProvider theme={MuiTheme}>\n      <section className='appContainer'>\n        <Root />\n      </section>\n    </MuiThemeProvider>\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}